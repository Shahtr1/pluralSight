/*
 * 	The challenge of concurrency
 * 		Threads sometimes share resources
 * 		No problem if resources only read
 * 		Changes must be coordinated
 * 
 * 	Failure to coordinate can create problems
 * 		Receive wrong results
 * 		Crash the program
 * 
 * 
 */

package onlineCoaching.multithreadingAndConcurrency;

public class ConcurrencyIssues {
	

}

//As simple Bank Account class
public class BankAccount{
	private int balance;
	
	public BankAccount(int startBalance) {
		balance = startBalance;
	}
	
	public int getBalance() {
		return balance;
	}
	
	public void deposit(int amount) {
		balance += amount;
	}
}

//A class to update bank account
public class Worker implements Runnable{
	private BankAccount account;
	public Worker(BankAccount account) {
		this.account=account;
	}
	public void run() {
		for(int i=0;i<10;i++) {
			int startBalance = account.getBalance();
			account.deposit(10);
			int endBalance = account.getBalance();
		}
	}
}










