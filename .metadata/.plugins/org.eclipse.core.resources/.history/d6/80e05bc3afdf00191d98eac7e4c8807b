/*
 * 	Process
 * 		Instance of a program/application
 * 		has resources such as memory,etc.
 * 		Has at least one thread
 * 
 * 	Thread
 * 		Sequence of programmed instructions
 * 		The thing that executes a program's code
 * 		Utilizes process resources
 * 
 *    
 */

/*
 * 	Java Threading abstraction
 * 		Limited threading abstraction
 * 			very close to the standard OS behavior
 * 
 * 	Threading Foundation Types
 * 		Runnable interface
 * 			Represents a task to be run on a thread
 * 			Only member is the run method
 * 		
 * 		Thread class
 * 			Represents a thread of execution
 * 			Can interact with and effect thread state
 * 			Begin execution with start method
 * 	
 */

package onlineCoaching.multithreadingAndConcurrency;

public class Introduction {

}
