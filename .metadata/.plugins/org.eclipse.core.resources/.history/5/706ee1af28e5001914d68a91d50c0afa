/*
 * 	Synchronized Methods
 * 		Automated concurrency management
 * 		Used lock of current object instance
 * 
 * 	All Java objects have a lock
 * 		Can manually acquire that lock
 * 			Use synchronized statement block
 * 			Available to any code with a reference
 */

package onlineCoaching.multithreadingAndConcurrency;

public class ManualSynchronization {
	public class BankAccount{
		private int balance;
		
		public BankAccount(int startBalance) {
			balance = startBalance;
		}
		
		public int getBalance() {
			return balance;
		}
		
		public void deposit(int amount) {
			balance += amount;
		} //not thread-safe we have to do it explicitly
	}
}

class Worker implements Runnable{
	private BankAccount account;
	//other members elided for clarity
	
	public void run() {
		for(int i = 0;i<10;i++) {
			synchronized(account) {
				account.deposit(10);
			}
		}
	}
}

//Why Use Synchronized statement blocks
	/*
	 * 	Synchronized blocks provide flexibility
	 * 		Enables use of non-thread safe classes
	 * 		Can protect complex blocks of code
	 * 		Sometimes synchronized methods just aren't enough
	 */




















